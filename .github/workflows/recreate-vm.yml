# This is a basic workflow to help you get started with Actions

name: Recreate VM Bootstrap on Proxmox Home Lab

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  repo: ${{ github.event.repository.name }}
  env_path: /mnt/env

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    # runs-on: ubuntu-latest
    strategy: &strategy
      matrix:
        os: [lxc-bootstrap]
    runs-on: ${{ matrix.os }}    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v3.0.0
        with:
          # TFLint version to install
          tflint_version: latest
          # GitHub token - used when getting the latest version of tflint
          github_token: ${{ github.token }}
      - name: Show version
        run: tflint --version

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint -f compact
        
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
      
      - name: terraform init
        run: terraform init

      - name: terraform-destroy
        run: |
          if [ -f "$env_path/$repo/state/terraform.tfstate" ]; then
            terraform destroy -var-file="$env_path/$repo/terraform.tfvars" -state="$env_path/$repo/state/terraform.tfstate" --auto-approve
          else
            echo "State file does not exist"
          fi

      - name: terraform-apply
        run: terraform apply -var-file=$env_path/$repo/terraform.tfvars -state=$env_path/$repo/state/terraform.tfstate --auto-approve

  config:
    strategy: *strategy
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: prashantsolanki3/dots
      - name: jgv
        run: ls && ls dots
      - name: Install ansible
        run: python3 -m pip install ansible
      - name: Install ansible-galaxy
        run: ansible-galaxy install -r requirements.yml
      # TODO: Run ansible-playbook for bootstrap from actions

